{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAaC,SAASC,cAAc,sBAC7BD,SAASC,cAAc,qBAChBD,SAASC,cAAc,uBACzBD,SAASC,cAAc,yBAE/BC,iBAAiB,SAAUC,GAEpC,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KAC1BC,YAAYL,EAAeJ,EAAWU,MAAM,IASzD,SAASN,EAAcO,EAAUC,GACTC,KAAKC,SAW3B,OAAOT,C,CAWTD,IACGW,MAAK,EAACJ,SAAEA,EAAQC,MAAEA,MACjBd,EAAAkB,OAAOC,QAAQ,qBAAqBN,QAAeC,MAAU,IAE9DM,OAAM,EAACP,SAAEA,EAAQC,MAAEA,MAClBd,EAAAkB,OAAOG,QAAQ,oBAAoBR,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst delayInput = document.querySelector('input[name=\"delay\"');\nconst step = document.querySelector('input[name=\"step\"');\nconst amountInput = document.querySelector('input[name=\"amount\"');\nconst submitBtn = document.querySelector('button[type=\"submit\"]');\n\nsubmitBtn.addEventListener('submit', createPromise);\n\n const promise = new Promise((resolve, reject) => {\n   resolve = setInterval(createPromise, delayInput.value);\n   \n    \n  });\n\n\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n     \n\n    } else {\n\n    // Reject\n      \n  };\n  \n  return promise;\n  \n  \n};\n\n\n\n\n\n\n\ncreatePromise(3, 1500)\n  .then(({ position, delay }) => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","addEventListener","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$promise","Promise","resolve","reject","setInterval","value","position","delay","Math","random","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.79158369.js.map"}