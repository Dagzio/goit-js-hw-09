{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAaC,SAASC,cAAc,sBAC7BD,SAASC,cAAc,qBAChBD,SAASC,cAAc,uBACzBD,SAASC,cAAc,yBAE/BC,iBAAiB,SAAUC,GAEpC,IAAMC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GAC1BC,YAAYL,EAAeJ,EAAWU,M,IASnD,SAASN,EAAcO,EAAUC,GACTC,KAAKC,SAW3B,OAAOT,C,CAWTD,IACGW,MAAK,SAAAC,G,IAAGL,EAAQK,EAARL,SAAUC,EAAKI,EAALJ,MACjBd,EAAAmB,OAAOC,QAAQ,qBAAoCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,IAE1DQ,OAAM,SAAAJ,G,IAAGL,EAAQK,EAARL,SAAUC,EAAKI,EAALJ,MAClBd,EAAAmB,OAAOI,QAAQ,oBAAmCF,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst delayInput = document.querySelector('input[name=\"delay\"');\nconst step = document.querySelector('input[name=\"step\"');\nconst amountInput = document.querySelector('input[name=\"amount\"');\nconst submitBtn = document.querySelector('button[type=\"submit\"]');\n\nsubmitBtn.addEventListener('submit', createPromise);\n\n const promise = new Promise((resolve, reject) => {\n   resolve = setInterval(createPromise, delayInput.value);\n   \n    \n  });\n\n\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n     \n\n    } else {\n\n    // Reject\n      \n  };\n  \n  return promise;\n  \n  \n};\n\n\n\n\n\n\n\ncreatePromise(3, 1500)\n  .then(({ position, delay }) => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","addEventListener","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$promise","Promise","resolve","reject","setInterval","value","position","delay","Math","random","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.46244706.js.map"}